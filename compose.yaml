# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose

services:
  app:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./server:/cryptotracker4/server
      - ./web:/cryptotracker4/web
      - ./tests:/cryptotracker4/tests
    environment:
      - OVERWRITE_TABLES=${OVERWRITE_TABLES:-false}
      - SQLALCHEMY_DATABASE_URL=${SQLALCHEMY_DATABASE_URL:-sqlite:///./server/crypto.db}
      - SECRET_KEY=${SECRET_KEY}
      - API_KEY=${API_KEY}
      - PYTHONPATH=/cryptotracker4
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
    command: >
      sh -c "conda run --no-capture-output -n dev python server/init_db.py && 
             conda run --no-capture-output -n dev gunicorn server.main:app --workers 4 --bind 0.0.0.0:8000 --worker-class uvicorn.workers.UvicornWorker"